name: Deploy to Hostinger

on:
  push:
    branches:
      - main
      - master
      - production
      - feature/test-workflow # For testing the workflow

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.0'
          extensions: mbstring, intl, gd, xml, zip
          tools: composer

      - name: Install dependencies
        run: |
          if [ -f "composer.json" ]; then
            composer install --no-dev --optimize-autoloader
          fi

      - name: Build assets (if using npm/yarn)
        run: |
          if [ -f "package.json" ]; then
            npm install
            npm run build
          fi

      - name: Test server connectivity
        run: |
          echo "Testing connectivity to ${{ secrets.FTP_SERVER }}..."
          timeout 10 bash -c "</dev/tcp/${{ secrets.FTP_SERVER }}/21" && echo "FTP port is reachable" || echo "FTP port is not reachable"
          ping -c 4 ${{ secrets.FTP_SERVER }} || echo "Could not ping server, but this might be normal if ICMP is blocked"
          
      - name: Deploy to Hostinger via FTP
        id: ftp-deploy
        continue-on-error: true
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./
          server-dir: /public_html/wp-content/themes/moahal/
          dangerous-clean-slate: false
          timeout: 120000
          protocol: ftp
          log-level: verbose
          retries: 5
          port: 21
          
      # Fallback deployment method using lftp if the main method fails
      - name: Fallback - Deploy using lftp
        if: steps.ftp-deploy.outcome == 'failure'
        run: |
          echo "Primary deployment method failed, trying fallback using lftp..."
          sudo apt-get update
          sudo apt-get install -y lftp
          
          # Create a temporary script to avoid exposing credentials in logs
          cat > deploy.sh << 'EOL'
          #!/bin/bash
          lftp -c "set ftp:ssl-allow no; \
                  open -u $1,$2 $3; \
                  lcd .; \
                  cd $4; \
                  mirror --reverse \
                        --delete \
                        --exclude-glob .git/ \
                        --exclude-glob .github/ \
                        --exclude-glob node_modules/ \
                        --verbose \
                        ./ ./"
          EOL
          
          chmod +x deploy.sh
          ./deploy.sh "${{ secrets.FTP_USERNAME }}" "${{ secrets.FTP_PASSWORD }}" "${{ secrets.FTP_SERVER }}" "/public_html/wp-content/themes/moahal/"
          
      - name: Deployment status
        run: |
          if [ "${{ steps.ftp-deploy.outcome }}" == "success" ]; then
            echo "✅ Deployment successful using primary method"
          elif [ $? -eq 0 ]; then
            echo "✅ Deployment successful using fallback method"
          else
            echo "❌ Both deployment methods failed"
            exit 1
          fi
          exclude: |
            **/.git/**
            **/.github/**
            **/node_modules/**
            .gitignore
            README.md
            package-lock.json
            yarn.lock
            .env
            .env.example
            .DS_Store
